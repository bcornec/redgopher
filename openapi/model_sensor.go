/*
 * Redfish API
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2018.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi
import (
	"time"
)

// This schema defines a Sensor to be used in conjunction with data center equipment.
type Sensor struct {
	// The OData description of a payload.
	OdataContext string `json:"@odata.context,omitempty"`
	// The current ETag of the resource.
	OdataEtag string `json:"@odata.etag,omitempty"`
	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`
	// The type of a resource.
	OdataType string `json:"@odata.type"`
	// Estimated percent error of measured vs. actual values.
	Accuracy float32 `json:"Accuracy,omitempty"`
	Actions Actions2 `json:"Actions,omitempty"`
	// Adjusted maximum allowable operating value for this equipment based on the current environmental conditions present.
	AdjustedMaxAllowableOperatingValue float32 `json:"AdjustedMaxAllowableOperatingValue,omitempty"`
	// Adjusted minimum allowable operating value for this equipment based on the current environmental conditions present.
	AdjustedMinAllowableOperatingValue float32 `json:"AdjustedMinAllowableOperatingValue,omitempty"`
	// The product of Voltage and Current for an AC circuit, in Volt-Amperes units.
	ApparentVA float32 `json:"ApparentVA,omitempty"`
	// Provides a description of this resource and is used for commonality  in the schema definitions.
	Description string `json:"Description,omitempty"`
	ElectricalContext ElectricalContext `json:"ElectricalContext,omitempty"`
	// Uniquely identifies the resource within the collection of like resources.
	Id string `json:"Id"`
	// The power load utilization for this Sensor.
	LoadPercent float32 `json:"LoadPercent,omitempty"`
	Location Location `json:"Location,omitempty"`
	// Maximum allowable operating value for this equipment.
	MaxAllowableOperatingValue float32 `json:"MaxAllowableOperatingValue,omitempty"`
	// Minimum allowable operating value for this equipment.
	MinAllowableOperatingValue float32 `json:"MinAllowableOperatingValue,omitempty"`
	// The name of the resource or array element.
	Name string `json:"Name"`
	Oem string `json:"Oem,omitempty"`
	// The peak reading value for this sensor.
	PeakReading float32 `json:"PeakReading,omitempty"`
	// The time at which the Peak Reading value occurred.
	PeakReadingTime time.Time `json:"PeakReadingTime,omitempty"`
	PhysicalContext IdRef `json:"PhysicalContext,omitempty"`
	PhysicalSubContext PhysicalSubContext `json:"PhysicalSubContext,omitempty"`
	// The power factor for this Sensor.
	PowerFactor float32 `json:"PowerFactor,omitempty"`
	// Number of significant digits in the Reading.
	Precision float32 `json:"Precision,omitempty"`
	// The square root of the difference term of squared ApparentVA and squared Power (Reading) for a circuit, expressed in VAR units.
	ReactiveVAR float32 `json:"ReactiveVAR,omitempty"`
	// The present value for this Sensor.
	Reading float32 `json:"Reading,omitempty"`
	// The maximum value of Reading possible for this Sensor.
	ReadingRangeMax float32 `json:"ReadingRangeMax,omitempty"`
	// The minimum value of Reading possible for this Sensor.
	ReadingRangeMin float32 `json:"ReadingRangeMin,omitempty"`
	ReadingType ReadingType `json:"ReadingType,omitempty"`
	// Units in which the reading and thresholds are measured.
	ReadingUnits string `json:"ReadingUnits,omitempty"`
	// The time interval between readings of the physical sensor.
	SensingFrequency float32 `json:"SensingFrequency,omitempty"`
	// The time at which the time-based properties were last reset.
	SensorResetTime time.Time `json:"SensorResetTime,omitempty"`
	Status Status `json:"Status,omitempty"`
	Thresholds Thresholds `json:"Thresholds,omitempty"`
	VoltageType VoltageType `json:"VoltageType,omitempty"`
}
