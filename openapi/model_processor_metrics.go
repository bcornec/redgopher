/*
 * Redfish API
 *
 * This contains the definition of a Redfish service.
 *
 * API version: 2018.3
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

// ProcessorMetrics contains usage and health statistics for a Processor (all Cores).
type ProcessorMetrics struct {
	// The OData description of a payload.
	OdataContext string `json:"@odata.context,omitempty"`
	// The current ETag of the resource.
	OdataEtag string `json:"@odata.etag,omitempty"`
	// The unique identifier for a resource.
	OdataId string `json:"@odata.id"`
	// The type of a resource.
	OdataType string `json:"@odata.type"`
	Actions Actions2 `json:"Actions,omitempty"`
	// The average frequency of the processor.
	AverageFrequencyMHz float32 `json:"AverageFrequencyMHz,omitempty"`
	// The CPU bandwidth as a percentage.
	BandwidthPercent float32 `json:"BandwidthPercent,omitempty"`
	// The processor cache metrics.
	Cache []CacheMetrics `json:"Cache,omitempty"`
	// The power consumed by the processor.
	ConsumedPowerWatt float32 `json:"ConsumedPowerWatt,omitempty"`
	// The processor core metrics.
	CoreMetrics []CoreMetrics `json:"CoreMetrics,omitempty"`
	// Provides a description of this resource and is used for commonality  in the schema definitions.
	Description string `json:"Description,omitempty"`
	// The frequency relative to the nominal processor frequency ratio.
	FrequencyRatio float32 `json:"FrequencyRatio,omitempty"`
	// Uniquely identifies the resource within the collection of like resources.
	Id string `json:"Id"`
	// The percentage of time spent in kernel mode.
	KernelPercent float32 `json:"KernelPercent,omitempty"`
	// The local memory bandwidth usage in bytes.
	LocalMemoryBandwidthBytes int32 `json:"LocalMemoryBandwidthBytes,omitempty"`
	// The name of the resource or array element.
	Name string `json:"Name"`
	Oem Oem `json:"Oem,omitempty"`
	// The remote memory bandwidth usage in bytes.
	RemoteMemoryBandwidthBytes int32 `json:"RemoteMemoryBandwidthBytes,omitempty"`
	// The temperature of the processor.
	TemperatureCelsius float32 `json:"TemperatureCelsius,omitempty"`
	// The CPU margin to throttle (temperature offset in degree Celsius).
	ThrottlingCelsius float32 `json:"ThrottlingCelsius,omitempty"`
	// The percentage of time spent in user mode.
	UserPercent float32 `json:"UserPercent,omitempty"`
}
